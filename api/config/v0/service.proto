// Copyright 2017 Capsule8 Inc. All rights reserved.

syntax = "proto3";

package capsule8.config.v0;
option go_package = "github.com/capsule8/reactive8/pkg/api/config";

import "google/api/annotations.proto";

//
// Capsule8 Configuration API
//
// The Configuration API is used by capsulators to update and get protobuf configs
// from STAN channels.
//
service ConfigurationService {
    rpc CreateConfig(CreateConfigRequest) returns (Config) {
        option (google.api.http) = {
            post: "/v0/config/{name}"
            body: "config"
        };
    }
    rpc GetConfig(GetConfigRequest) returns (Config) {
        option (google.api.http) = { get: "/v0/config/{name}" };
    }
    // Watch for Config updates
    rpc WatchConfig(GetConfigRequest) returns (stream Config) {
        option (google.api.http) = { get: "/v0/config/{name}/watch" };
    }
}

// This message is just a wrapper around the actual config contained w/in the payload
message Config {
    string package_name = 1;
    bytes payload = 2;
    bytes descriptor = 3;  // Optional, holds the gzipped `FileDescriptorProto` w/ `payload` metadata
}

// Creates a config by `name`
message CreateConfigRequest {
    string name = 1;
    Config config = 2;
}

// Retrieves a config of `name`
message GetConfigRequest {
    string name = 1;
}
