// Copyright 2017 Capsule8 Inc. All rights reserved.

syntax = "proto3";

package capsule8.event.v0;
option go_package = "github.com/capsule8/reactive8/pkg/api/event";

message Event {
  // Common event details:
  // cluster, node, process, timestamps, etc.

  // Sensor-specific subevent
  oneof subevent {
    ChargenEvent   chargen = 100;
    ContainerEvent container = 101;
    TickerEvent    ticker  = 102;

    // ProcessEvent
    // ContainerEvent
    // FileEvent
    // SystemCallEvent
    // NetFlowEvent
    // NetworkEvent
    // PacketEvent
    // OrchestratorEvent
    // CustomEvent
  }
}

message ChargenEvent {
  // Index of the first character in this Event in relation to all of
  // the characters that have been generated in this stream.
  uint64 index = 1;
    
  // The next one or more characters in the autogenerated stream
  string characters = 2;
}

message TickerEvent {
  // The number of seconds elapsed since January 1, 1970 UTC.
  // 
  // https://golang.org/pkg/time/#Time.Unix
  int64 seconds = 1;
 
  // The number of nanoseconds elapsed since January 1, 1970 UTC
  //
  // https://golang.org/pkg/time/#Time.UnixNano
  int64 nanoseconds = 2;
}

message ContainerEvent {
  enum ContainerState {
    CONTAINER_UNKNOWN = 0;
    CONTAINER_CREATED = 1;
    CONTAINER_STARTED = 2;
    CONTAINER_STOPPED = 3;
    CONTAINER_REMOVED = 4;
  }

  string         containerID = 1;
  ContainerState state = 2;

  //
  // The fields below are state-dependent and may not always be present
  //

  string         imageID = 3;

  // XXX: Fill in basic details common to docker and rkt
}
