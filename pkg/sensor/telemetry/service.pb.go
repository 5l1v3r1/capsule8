// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package capsule8_telemetry is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	GetEventsRequest
	GetEventsResponse
*/
package capsule8_telemetry

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import capsule8_v01 "github.com/capsule8/reactive8/pkg/api/v0"
import capsule8_v0 "github.com/capsule8/reactive8/pkg/api/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetEventsRequest struct {
	Sub *capsule8_v01.Subscription `protobuf:"bytes,1,opt,name=sub" json:"sub,omitempty"`
}

func (m *GetEventsRequest) Reset()                    { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()               {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetEventsRequest) GetSub() *capsule8_v01.Subscription {
	if m != nil {
		return m.Sub
	}
	return nil
}

type GetEventsResponse struct {
	Events []*capsule8_v0.Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (m *GetEventsResponse) Reset()                    { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()               {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetEventsResponse) GetEvents() []*capsule8_v0.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*GetEventsRequest)(nil), "capsule8.telemetry.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "capsule8.telemetry.GetEventsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TelemetryService service

type TelemetryServiceClient interface {
	// Publishes messages to a topic
	GetEvents(ctx context.Context, in *capsule8_v01.Subscription, opts ...grpc.CallOption) (TelemetryService_GetEventsClient, error)
}

type telemetryServiceClient struct {
	cc *grpc.ClientConn
}

func NewTelemetryServiceClient(cc *grpc.ClientConn) TelemetryServiceClient {
	return &telemetryServiceClient{cc}
}

func (c *telemetryServiceClient) GetEvents(ctx context.Context, in *capsule8_v01.Subscription, opts ...grpc.CallOption) (TelemetryService_GetEventsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_TelemetryService_serviceDesc.Streams[0], c.cc, "/capsule8.telemetry.TelemetryService/GetEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &telemetryServiceGetEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TelemetryService_GetEventsClient interface {
	Recv() (*GetEventsResponse, error)
	grpc.ClientStream
}

type telemetryServiceGetEventsClient struct {
	grpc.ClientStream
}

func (x *telemetryServiceGetEventsClient) Recv() (*GetEventsResponse, error) {
	m := new(GetEventsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for TelemetryService service

type TelemetryServiceServer interface {
	// Publishes messages to a topic
	GetEvents(*capsule8_v01.Subscription, TelemetryService_GetEventsServer) error
}

func RegisterTelemetryServiceServer(s *grpc.Server, srv TelemetryServiceServer) {
	s.RegisterService(&_TelemetryService_serviceDesc, srv)
}

func _TelemetryService_GetEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(capsule8_v01.Subscription)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TelemetryServiceServer).GetEvents(m, &telemetryServiceGetEventsServer{stream})
}

type TelemetryService_GetEventsServer interface {
	Send(*GetEventsResponse) error
	grpc.ServerStream
}

type telemetryServiceGetEventsServer struct {
	grpc.ServerStream
}

func (x *telemetryServiceGetEventsServer) Send(m *GetEventsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TelemetryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "capsule8.telemetry.TelemetryService",
	HandlerType: (*TelemetryServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEvents",
			Handler:       _TelemetryService_GetEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x41, 0x8b, 0x83, 0x30,
	0x10, 0x46, 0x37, 0x08, 0xc2, 0x46, 0x16, 0xdc, 0x39, 0xb9, 0x9e, 0x44, 0x58, 0x90, 0x16, 0x82,
	0xd8, 0x4b, 0x6f, 0x9e, 0x4a, 0xcf, 0xd5, 0xfe, 0x81, 0x2a, 0x73, 0x10, 0xac, 0x49, 0x33, 0x89,
	0xd0, 0x7f, 0x5f, 0xd4, 0x56, 0x2c, 0xd2, 0x63, 0xc2, 0xe3, 0xcd, 0xf7, 0xf8, 0x0f, 0xa1, 0xee,
	0x9b, 0x1a, 0x85, 0xd2, 0xd2, 0x48, 0x80, 0xfa, 0xa2, 0xc8, 0xb6, 0xb8, 0x17, 0x06, 0x5b, 0xbc,
	0xa2, 0xd1, 0xf7, 0x10, 0xc8, 0x56, 0x54, 0xeb, 0x46, 0x99, 0x46, 0x76, 0x13, 0x17, 0x7a, 0xd8,
	0x63, 0x67, 0xa6, 0x47, 0x9c, 0x73, 0xff, 0x88, 0xe6, 0x30, 0xfc, 0x50, 0x81, 0x37, 0x8b, 0x64,
	0x60, 0xcb, 0x1d, 0xb2, 0x55, 0xc0, 0x22, 0x96, 0x78, 0xd9, 0x9f, 0x98, 0xb5, 0x7d, 0x2a, 0xca,
	0x85, 0xae, 0x18, 0xa8, 0x38, 0xe7, 0xbf, 0x0b, 0x01, 0x29, 0xd9, 0x11, 0xc2, 0x86, 0xbb, 0xe3,
	0x11, 0x0a, 0x58, 0xe4, 0x24, 0x5e, 0x06, 0x6f, 0x92, 0x11, 0x2e, 0x9e, 0x44, 0x86, 0xdc, 0x3f,
	0xbf, 0xf6, 0x96, 0x53, 0x10, 0x9c, 0xf8, 0xf7, 0x2c, 0x85, 0xcf, 0x0b, 0xc2, 0x7f, 0xb1, 0x6e,
	0x16, 0xab, 0x39, 0xf1, 0x57, 0xca, 0x2a, 0x77, 0xec, 0xdd, 0x3d, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xaf, 0x1b, 0x03, 0x22, 0x35, 0x01, 0x00, 0x00,
}
